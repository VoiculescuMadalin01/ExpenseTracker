{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointsValue","dataPoints","map","dataPoint","totalMaximum","max","index","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","selected","onChange","event","onFilterByYear","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","onClick","onDelete","id","ExpensesList","deleteHandler","items","length","Expenses","useState","yearFilter","setFilterYear","filtredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","required","min","step","onCancel","NewExpense","isEditing","setIsEditing","cancelHandler","prevEditingState","enteredExpenseData","random","addExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fab7acfc.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n\tconst classes = \"card \" + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\tlet barFillHeight = \"0%\";\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"chart-bar\">\r\n\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"chart-bar__fill\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: barFillHeight,\r\n\t\t\t\t\t}}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar.js\";\r\n\r\nconst Chart = (props) => {\r\n\tconst dataPointsValue = props.dataPoints.map(\r\n\t\t(dataPoint) => dataPoint.value\r\n\t);\r\n\tconst totalMaximum = Math.max(...dataPointsValue);\r\n\treturn (\r\n\t\t<div className=\"chart\">\r\n\t\t\t{props.dataPoints.map((dataPoint, index) => (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n\t\t\t\t\tmaxValue={totalMaximum}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: \"Jan\", value: 0 },\r\n\t\t{ label: \"Feb\", value: 0 },\r\n\t\t{ label: \"Mar\", value: 0 },\r\n\t\t{ label: \"Apr\", value: 0 },\r\n\t\t{ label: \"May\", value: 0 },\r\n\t\t{ label: \"Jun\", value: 0 },\r\n\t\t{ label: \"Jul\", value: 0 },\r\n\t\t{ label: \"Aug\", value: 0 },\r\n\t\t{ label: \"Sep\", value: 0 },\r\n\t\t{ label: \"Oct\", value: 0 },\r\n\t\t{ label: \"Nov\", value: 0 },\r\n\t\t{ label: \"Dec\", value: 0 },\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth();\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\tconst handleChange = (event) => {\r\n\t\tprops.onFilterByYear(event.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select value={props.selected} onChange={handleChange}>\r\n\t\t\t\t\t<option value=\"all\">Year</option>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n\tconst month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n\tconst day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\tconst year = props.date.getFullYear();\r\n\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport Card from \"./../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\tconst deleteExpense = () => {\r\n\t\tprops.onDelete(props.id);\r\n\t};\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expense-item\">\r\n\t\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className=\"expense-item__price\">${props.amount}</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"expense-item__delete\"\r\n\t\t\t\t\t\tonClick={deleteExpense}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n\tconst deleteHandler = (id) => {\r\n\t\tprops.onDelete(id);\r\n\t};\r\n\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className=\"expenses-list__fallback\"> No expenses found</h2>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"expenses-list\">\r\n\t\t\t{props.items.map((expense) => (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\ttitle={expense.title}\r\n\t\t\t\t\tamount={expense.amount}\r\n\t\t\t\t\tdate={expense.date}\r\n\t\t\t\t\tkey={expense.id}\r\n\t\t\t\t\tid={expense.id}\r\n\t\t\t\t\tonDelete={deleteHandler}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"./../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nconst Expenses = (props) => {\r\n\tconst [yearFilter, setFilterYear] = useState(\"all\");\r\n\tconst filterByYearHandler = (year) => {\r\n\t\tsetFilterYear(year);\r\n\t};\r\n\tconst filtredExpenses = props.items.filter((expense) => {\r\n\t\treturn yearFilter !== \"all\"\r\n\t\t\t? expense.date.getFullYear().toString() === yearFilter\r\n\t\t\t: expense;\r\n\r\n\t\t// if (yearFilter !== \"all\") {\r\n\t\t// \treturn expense.date.getFullYear().toString() === yearFilter;\r\n\t\t// } else {\r\n\t\t// \treturn expense;\r\n\t\t// }\r\n\t});\r\n\tconst deleteHandler = (id) => {\r\n\t\tprops.onDelete(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t<ExpensesFilter\r\n\t\t\t\t\tselected={yearFilter}\r\n\t\t\t\t\tonFilterByYear={filterByYearHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExpensesChart expenses={filtredExpenses} />\r\n\t\t\t\t<ExpensesList\r\n\t\t\t\t\tonDelete={deleteHandler}\r\n\t\t\t\t\titems={filtredExpenses}\r\n\t\t\t\t/>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\tconst [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\tconst [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\tconst [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n\t// const [userInput, setUserInput] = useState({\r\n\t// \tenteredTitle: \"\",\r\n\t// \tenteredAmount: \"\",\r\n\t// \tenteredDate: \"\",\r\n\t// });\r\n\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredTitle: event.target.value,\r\n\t\t// });\r\n\r\n\t\t// setUserInput((prevState) => {\r\n\t\t// \treturn { ...prevState, enteredTitle: event.target.value };\r\n\t\t// });\r\n\t};\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredAmount: event.target.value,\r\n\t\t// });\r\n\r\n\t\t// setUserInput((prevState) => {\r\n\t\t// \treturn { ...prevState, enteredAmount: event.target.value };\r\n\t\t// });\r\n\t};\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredDate: event.target.value,\r\n\t\t// });\r\n\r\n\t\t// setUserInput((prevState) => {\r\n\t\t// \treturn { ...prevState, enteredDate: event.target.value };\r\n\t\t// });\r\n\t};\r\n\tconst submitHadler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount,\r\n\t\t\tdate: new Date(enteredDate),\r\n\t\t};\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\t\tsetEnteredTitle(\"\");\r\n\t\tsetEnteredAmount(\"\");\r\n\t\tsetEnteredDate(\"\");\r\n\t};\r\n\tconst cancelHandler = () => {\r\n\t\tprops.onCancel();\r\n\t\tsetEnteredTitle(\"\");\r\n\t\tsetEnteredAmount(\"\");\r\n\t\tsetEnteredDate(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHadler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={enteredTitle}\r\n\t\t\t\t\t\tonChange={titleChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin=\"0.01\"\r\n\t\t\t\t\t\tstep=\"0.01\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={enteredAmount}\r\n\t\t\t\t\t\tonChange={amountChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tmin=\"2019-01-01\"\r\n\t\t\t\t\t\tmax=\"2022-12-31\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t\tonChange={dateChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t<button type=\"button\" onClick={cancelHandler}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\r\n\tconst cancelHandler = () => {\r\n\t\tsetIsEditing((prevEditingState) => {\r\n\t\t\treturn !prevEditingState;\r\n\t\t});\r\n\t};\r\n\r\n\tconst onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\t...enteredExpenseData,\r\n\t\t\tid: Math.random(),\r\n\t\t};\r\n\t\tprops.addExpense(expenseData);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"new-expense\">\r\n\t\t\t{!isEditing && (\r\n\t\t\t\t<button onClick={cancelHandler}>Add New Expense</button>\r\n\t\t\t)}\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<ExpenseForm\r\n\t\t\t\t\tonCancel={cancelHandler}\r\n\t\t\t\t\tonSaveExpenseData={onSaveExpenseDataHandler}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n\t{\n\t\tid: \"e1\",\n\t\tdate: new Date(2020, 10, 1),\n\t\ttitle: \"car bill\",\n\t\tamount: 223.6,\n\t},\n\t{\n\t\tid: \"e2\",\n\t\tdate: new Date(2021, 9, 1),\n\t\ttitle: \"car bill2\",\n\t\tamount: 2223.6,\n\t},\n\t{\n\t\tid: \"e3\",\n\t\tdate: new Date(2022, 8, 1),\n\t\ttitle: \"car bill3\",\n\t\tamount: 203.6,\n\t},\n];\n\nconst App = () => {\n\tconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\tconst addExpenseHandler = (expense) => {\n\t\tsetExpenses((prevExpenses) => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\tconst deleteHandler = (id) => {\n\t\tsetExpenses((prevExpenses) => {\n\t\t\treturn prevExpenses.filter((expense) => expense.id != id);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense addExpense={addExpenseHandler} />\n\t\t\t<Expenses onDelete={deleteHandler} items={expenses}></Expenses>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}